from django.shortcuts import render, redirect
hello varshi 
yes
okok
if val3 < 18.5:

VARSHITHA'S COMMIT  THIS IS MY 3RD COMMIT

Sindhu is doing this commit for the second time
She is saying hello world

hello 

sINDHU IS MAKING 3RD COMMIT, HELLO GUYS!!
LETS LEARN CONFLICT MERGES BLAH BLAH

hi guys   chalu edhi

Now this is sindhu's 4th commit, and hello everyone
i am a so so good girllllll yooo

    
       
 
        results = [(item, quantity,item.price) for item, quantity in zip(nutrition_data, quantities)]

        return render(request, 'suggestresult.html', {'results': results})

    return redirect('mains.html')


@login_required(login_url='login')
def score(request):#back button fn in inputsbase.html
    name = request.session.get('name')  
    age = request.session.get('age')     
    nutrition_items = NutritionInfo.objects.values_list('item_name', flat=True)
    return render(request, 'score.html', {
        'name': name,
        'age': age,
        'nutrition_items': nutrition_items,
    })
@login_required(login_url='login')
def bmicalc(request):#bmi calculator
    if request.method == "POST":
        weight = int(request.POST.get('weig', 0))
        height = int(request.POST.get('heig', 0))
        age = int(request.POST.get('age', 0))
        gender = request.POST.get('options', '')
        if height<=0 or weight<=0:
            errormsg="Height/Weight should be above zero. Please enter valid inputs."
            return render(request, 'bmiresult.html', {'error': errormsg, 'age': age, 'gender': gender})
        if age<0 or age >100:
            errormsg="Invalid age."
            return render(request, 'bmiresult.html', {'error': errormsg, 'age': age, 'gender': gender})
        ht = height/100
        val3 = weight/(ht**2)
        if val3 < 18.5:
            res = "Underweight"
        elif 18.5 <= val3 < 25:
            res = "Normal weight"
        elif 25 <= val3 <= 29.9:
            res = "Overweight"
        elif 30 <= val3 <= 34.9:
            res = "Obesity Class 1"
        elif 35 <= val3 <= 39.9:
            res = "Obesity Class 2"
        elif val3 >= 40:
            res = "Obesity Class 3"
        else:
            res = "Invalid BMI"
        BMICalculation.objects.create(weight=weight, height=height, bmi_value=val3, gender=gender, category=res)
        return render(request, 'bmiresult.html', {'result': round(val3), 'age': age, 'gender': gender, 'category': res})
    return render(request, 'bmical.html')

